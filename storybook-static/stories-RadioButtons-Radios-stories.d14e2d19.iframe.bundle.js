(self.webpackChunk_pa_digital_govuk_frontend_react=self.webpackChunk_pa_digital_govuk_frontend_react||[]).push([[2796],{"./src/stories/RadioButtons/Radios.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Compact:()=>Compact,Default:()=>Default,Divider:()=>Divider,Error:()=>Error,Hint:()=>Hint,Inline:()=>Inline,MultiQuestion:()=>MultiQuestion,Preset:()=>Preset,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Radios_stories});var dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),react=__webpack_require__("./node_modules/react/index.js"),v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})),target}function RadioButton(param){var identifier=param.identifier,groupName=param.groupName,text=param.text,value=param.value,hint=param.hint,_param_checked=param.checked,checked=void 0!==_param_checked&&_param_checked,required=param.required,onChange=param.onChange,onBlur=param.onBlur,radioButtonAttr={"aria-describedby":hint&&"".concat(identifier,"-item-hint"),"aria-required":required,required};return react.createElement("div",{className:"govuk-radios__item"},react.createElement("input",_object_spread_props(function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})))),ownKeys.forEach((function(key){_define_property(target,key,source[key])}))}return target}({className:"govuk-radios__input",id:identifier,name:groupName,type:"radio",value,defaultChecked:checked},radioButtonAttr),{onChange,onBlur})),react.createElement("label",{className:"govuk-label govuk-radios__label",htmlFor:identifier},text),hint&&react.createElement("div",{id:"".concat(identifier,"-item-hint"),className:"govuk-hint govuk-radios__hint"},hint))}const Radios_RadioButton=RadioButton;try{RadioButton.displayName="RadioButton",RadioButton.__docgenInfo={description:"",displayName:"RadioButton",props:{identifier:{defaultValue:null,description:"",name:"identifier",required:!0,type:{name:"string"}},groupName:{defaultValue:null,description:"",name:"groupName",required:!0,type:{name:"string"}},text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string"}},hint:{defaultValue:null,description:"",name:"hint",required:!1,type:{name:"string"}},checked:{defaultValue:{value:"false"},description:"",name:"checked",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"FocusEventHandler<HTMLInputElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/UI/Radios/RadioButton.tsx#RadioButton"]={docgenInfo:RadioButton.__docgenInfo,name:"RadioButton",path:"src/UI/Radios/RadioButton.tsx#RadioButton"})}catch(__react_docgen_typescript_loader_error){}function RadioButtonDivider(param){var _param_text=param.text,text=void 0===_param_text?"or":_param_text;return react.createElement("div",{className:"govuk-radios__divider"},text)}const Radios_RadioButtonDivider=RadioButtonDivider;try{RadioButtonDivider.displayName="RadioButtonDivider",RadioButtonDivider.__docgenInfo={description:"",displayName:"RadioButtonDivider",props:{text:{defaultValue:{value:"or"},description:"",name:"text",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/UI/Radios/RadioButtonDivider.tsx#RadioButtonDivider"]={docgenInfo:RadioButtonDivider.__docgenInfo,name:"RadioButtonDivider",path:"src/UI/Radios/RadioButtonDivider.tsx#RadioButtonDivider"})}catch(__react_docgen_typescript_loader_error){}function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function RadioButtons_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function RadioButtons_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})))),ownKeys.forEach((function(key){RadioButtons_define_property(target,key,source[key])}))}return target}function RadioButtons_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):function RadioButtons_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})),target}function _sliced_to_array(arr,i){return function _array_with_holes(arr){if(Array.isArray(arr))return arr}(arr)||function _iterable_to_array_limit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}(arr,i)||function _unsupported_iterable_to_array(o,minLen){if(!o)return;if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}(arr,i)||function _non_iterable_rest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var RadioButtons=(0,react.memo)((function(param){var identifier=param.identifier,header=param.header,hint=param.hint,data=param.data,error=param.error,compact=param.compact,multiQuestion=param.multiQuestion,_param_render=param.render,render=void 0===_param_render?"vertical":_param_render,required=param.required,onValueChange=param.onValueChange,_useState=_sliced_to_array((0,react.useState)([]),2),radioButtonList=_useState[0],setRadioButtonList=_useState[1],_useState1=_sliced_to_array((0,react.useState)(!1),2),renderToggle=_useState1[0],setRenderToggle=_useState1[1];(0,react.useMemo)((function(){}),[]);var containerAttr={className:error?"govuk-form-group govuk-form-group--error":"govuk-form-group"},radioButtonsWrapperAttr={className:compact?"govuk-radios govuk-radios--small":"govuk-radios"};radioButtonsWrapperAttr.className+="inline"===render?" govuk-radios--inline":"";var fieldSetAttr={"aria-describedby":""};error&&(fieldSetAttr["aria-describedby"]="".concat(identifier,"-error ")),hint&&(fieldSetAttr["aria-describedby"]+="".concat(identifier,"-hint ")),fieldSetAttr["aria-describedby"]+="".concat(identifier,"-legend");var nonMultiLegendClass={className:compact?"govuk-fieldset__legend govuk-fieldset__legend--m":"govuk-fieldset__legend govuk-fieldset__legend--l"},handleOnChange=function(e){var updatedList=radioButtonList;updatedList.forEach((function(button){button.checked=!1}));var valuesIndex=updatedList.findIndex((function(x){return x.value===e.target.value}));valuesIndex>-1&&(updatedList[valuesIndex].checked=e.target.checked),setRadioButtonList(updatedList),onValueChange(updatedList),setRenderToggle(!renderToggle)};return(0,react.useEffect)((function(){setRadioButtonList(data)}),[data]),react.createElement("div",containerAttr,react.createElement("fieldset",RadioButtons_object_spread({className:"govuk-fieldset"},fieldSetAttr),multiQuestion?react.createElement("legend",{className:"govuk-fieldset__legend",id:"".concat(identifier,"-legend")},header):react.createElement("legend",RadioButtons_object_spread_props(RadioButtons_object_spread({},nonMultiLegendClass),{id:"".concat(identifier,"-legend")}),react.createElement("h1",{className:"govuk-fieldset__heading"},header)),hint&&react.createElement("div",{id:"".concat(identifier,"-hint"),className:"govuk-hint"},hint),error&&react.createElement("p",{id:"".concat(identifier,"-error"),className:"govuk-error-message"},react.createElement("span",{className:"govuk-visually-hidden"},"Error:")," ",error),react.createElement("div",RadioButtons_object_spread({"data-module":"govuk-radios"},radioButtonsWrapperAttr),data.map((function(element,index){return element.divider?react.createElement(Radios_RadioButtonDivider,{text:element.text,key:(0,v4.A)()}):react.createElement(Radios_RadioButton,{identifier:"".concat(identifier,"-").concat(index+1),groupName:identifier,text:element.text,value:element.value,hint:element.hint,key:(0,v4.A)(),checked:element.checked,required,onChange:function(e){return handleOnChange(e)},onBlur:function(e){return handleOnChange(e)}})})))))}));try{RadioButtons.displayName="RadioButtons",RadioButtons.__docgenInfo={description:"",displayName:"RadioButtons",props:{identifier:{defaultValue:null,description:"",name:"identifier",required:!0,type:{name:"string"}},header:{defaultValue:null,description:"",name:"header",required:!0,type:{name:"string"}},hint:{defaultValue:null,description:"",name:"hint",required:!1,type:{name:"string"}},data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"RadioButtonDataProps[]"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},compact:{defaultValue:null,description:"",name:"compact",required:!1,type:{name:"boolean"}},multiQuestion:{defaultValue:null,description:"",name:"multiQuestion",required:!1,type:{name:"boolean"}},render:{defaultValue:null,description:"",name:"render",required:!1,type:{name:"enum",value:[{value:'"vertical"'},{value:'"inline"'}]}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},onValueChange:{defaultValue:null,description:"",name:"onValueChange",required:!0,type:{name:"(values: RadioButtonDataProps[]) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/UI/Radios/RadioButtons.tsx#RadioButtons"]={docgenInfo:RadioButtons.__docgenInfo,name:"RadioButtons",path:"src/UI/Radios/RadioButtons.tsx#RadioButtons"})}catch(__react_docgen_typescript_loader_error){}var WhereDoYouLiveData=[{text:"England",value:"England"},{text:"Scotland",value:"Scotland"},{text:"Wales",value:"Wales"},{text:"Northern Ireland",value:"NIreland"}];const Radios_stories={title:"Components/Radios/Implementation",component:RadioButtons};var Default={args:{identifier:"radiobuttons",header:"Radio button list",data:WhereDoYouLiveData,onValueChange:(0,dist.fn)()}},Compact={args:{identifier:"radiobuttons",header:"Radio button list in compact mode",data:WhereDoYouLiveData,compact:!0,onValueChange:(0,dist.fn)()}},MultiQuestion={args:{identifier:"radiobuttons",header:"Radio button list in multi question mode",data:WhereDoYouLiveData,multiQuestion:!0,onValueChange:(0,dist.fn)()}},Divider={args:{identifier:"radiobuttons",header:"Radio button list with divider",data:[{text:"England",value:"England"},{text:"Scotland",value:"Scotland"},{text:"Wales",value:"Wales"},{text:"Northern Ireland",value:"NIreland"},{text:"or",value:"",divider:!0},{text:"I am a British citizen living abroad",value:"Abroad"}],onValueChange:(0,dist.fn)()}},Hint={args:{identifier:"radiobuttons",header:"Radio button list with hints",hint:"Radio button list hint",data:[{text:"Sign in with Government Gateway",value:"GovGateway",hint:"You'll have a user ID if you've registered for Self Assessment or filed a tax return online before."},{text:"Sign in with GOV.UK Verify",value:"GovVerify",hint:"You'll have an account if you've already proved your identity with either Barclays, CitizenSafe, Digidentity, Experian, Post Office, Royal Mail or SecureIdentity."}],onValueChange:(0,dist.fn)()}},Inline={args:{identifier:"radiobuttons",header:"Radio button list as an inline display",render:"inline",data:WhereDoYouLiveData,onValueChange:(0,dist.fn)()}},Preset={args:{identifier:"radiobuttons",header:"Radio button list with present options",data:[{text:"Yes",value:"Yes"},{text:"No",value:"No",checked:!0}],onValueChange:(0,dist.fn)()}},Error={args:{identifier:"radiobuttons",header:"Radio button list with error message",error:"You must select a value",data:WhereDoYouLiveData,onValueChange:(0,dist.fn)()}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'radiobuttons',\n    header: 'Radio button list',\n    data: WhereDoYouLiveData,\n    onValueChange: fn()\n  }\n}",...Default.parameters?.docs?.source}}},Compact.parameters={...Compact.parameters,docs:{...Compact.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'radiobuttons',\n    header: 'Radio button list in compact mode',\n    data: WhereDoYouLiveData,\n    compact: true,\n    onValueChange: fn()\n  }\n}",...Compact.parameters?.docs?.source}}},MultiQuestion.parameters={...MultiQuestion.parameters,docs:{...MultiQuestion.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'radiobuttons',\n    header: 'Radio button list in multi question mode',\n    data: WhereDoYouLiveData,\n    multiQuestion: true,\n    onValueChange: fn()\n  }\n}",...MultiQuestion.parameters?.docs?.source}}},Divider.parameters={...Divider.parameters,docs:{...Divider.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'radiobuttons',\n    header: 'Radio button list with divider',\n    data: WhereDoYouLiveExtData,\n    onValueChange: fn()\n  }\n}",...Divider.parameters?.docs?.source}}},Hint.parameters={...Hint.parameters,docs:{...Hint.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'radiobuttons',\n    header: 'Radio button list with hints',\n    hint: 'Radio button list hint',\n    data: SignInData,\n    onValueChange: fn()\n  }\n}",...Hint.parameters?.docs?.source}}},Inline.parameters={...Inline.parameters,docs:{...Inline.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'radiobuttons',\n    header: 'Radio button list as an inline display',\n    render: 'inline',\n    data: WhereDoYouLiveData,\n    onValueChange: fn()\n  }\n}",...Inline.parameters?.docs?.source}}},Preset.parameters={...Preset.parameters,docs:{...Preset.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'radiobuttons',\n    header: 'Radio button list with present options',\n    data: PreSelectedNameChangeData,\n    onValueChange: fn()\n  }\n}",...Preset.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'radiobuttons',\n    header: 'Radio button list with error message',\n    error: 'You must select a value',\n    data: WhereDoYouLiveData,\n    onValueChange: fn()\n  }\n}",...Error.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Compact","MultiQuestion","Divider","Hint","Inline","Preset","Error"]},"./node_modules/@storybook/test/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/test/dist sync recursive",module.exports=webpackEmptyContext}}]);
"use strict";(self.webpackChunk_pa_digital_govuk_frontend_react=self.webpackChunk_pa_digital_govuk_frontend_react||[]).push([[2796],{"./src/stories/RadioButtons/Radios.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Compact:()=>Compact,Default:()=>Default,Divider:()=>Divider,Error:()=>Error,Hint:()=>Hint,Inline:()=>Inline,MultiQuestion:()=>MultiQuestion,Preset:()=>Preset,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_test__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),_UI_Radios_RadioButtons__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/UI/Radios/RadioButtons.tsx"),_UI_Radios_RadioButtonTestData__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/UI/Radios/RadioButtonTestData.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Radios/Implementation",component:_UI_Radios_RadioButtons__WEBPACK_IMPORTED_MODULE_1__.h},Default={args:{identifier:"defaultradio",header:"Radio button list",data:_UI_Radios_RadioButtonTestData__WEBPACK_IMPORTED_MODULE_2__.q5,onValueChange:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()}},Compact={args:{identifier:"compactradio",header:"Radio button list in compact mode",data:_UI_Radios_RadioButtonTestData__WEBPACK_IMPORTED_MODULE_2__.q5,compact:!0,onValueChange:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()}},MultiQuestion={args:{identifier:"multiradio",header:"Radio button list in multi question mode",data:_UI_Radios_RadioButtonTestData__WEBPACK_IMPORTED_MODULE_2__.q5,multiQuestion:!0,onValueChange:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()}},Divider={args:{identifier:"dividerradio",header:"Radio button list with divider",data:_UI_Radios_RadioButtonTestData__WEBPACK_IMPORTED_MODULE_2__.FQ,onValueChange:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()}},Hint={args:{identifier:"hintradio",header:"Radio button list with hints",hint:"Radio button list hint",data:_UI_Radios_RadioButtonTestData__WEBPACK_IMPORTED_MODULE_2__.Hm,onValueChange:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()}},Inline={args:{identifier:"inlineradio",header:"Radio button list as an inline display",render:"inline",data:_UI_Radios_RadioButtonTestData__WEBPACK_IMPORTED_MODULE_2__.q5,onValueChange:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()}},Preset={args:{identifier:"presetradio",header:"Radio button list with present options",data:_UI_Radios_RadioButtonTestData__WEBPACK_IMPORTED_MODULE_2__.y_,onValueChange:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()}},Error={args:{identifier:"errorradio",header:"Radio button list with error message",error:"You must select a value",data:_UI_Radios_RadioButtonTestData__WEBPACK_IMPORTED_MODULE_2__.q5,onValueChange:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()}},__namedExportsOrder=["Default","Compact","MultiQuestion","Divider","Hint","Inline","Preset","Error"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'defaultradio',\n    header: 'Radio button list',\n    data: WhereDoYouLiveData,\n    onValueChange: fn()\n  }\n}",...Default.parameters?.docs?.source}}},Compact.parameters={...Compact.parameters,docs:{...Compact.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'compactradio',\n    header: 'Radio button list in compact mode',\n    data: WhereDoYouLiveData,\n    compact: true,\n    onValueChange: fn()\n  }\n}",...Compact.parameters?.docs?.source}}},MultiQuestion.parameters={...MultiQuestion.parameters,docs:{...MultiQuestion.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'multiradio',\n    header: 'Radio button list in multi question mode',\n    data: WhereDoYouLiveData,\n    multiQuestion: true,\n    onValueChange: fn()\n  }\n}",...MultiQuestion.parameters?.docs?.source}}},Divider.parameters={...Divider.parameters,docs:{...Divider.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'dividerradio',\n    header: 'Radio button list with divider',\n    data: WhereDoYouLiveExtData,\n    onValueChange: fn()\n  }\n}",...Divider.parameters?.docs?.source}}},Hint.parameters={...Hint.parameters,docs:{...Hint.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'hintradio',\n    header: 'Radio button list with hints',\n    hint: 'Radio button list hint',\n    data: SignInData,\n    onValueChange: fn()\n  }\n}",...Hint.parameters?.docs?.source}}},Inline.parameters={...Inline.parameters,docs:{...Inline.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'inlineradio',\n    header: 'Radio button list as an inline display',\n    render: 'inline',\n    data: WhereDoYouLiveData,\n    onValueChange: fn()\n  }\n}",...Inline.parameters?.docs?.source}}},Preset.parameters={...Preset.parameters,docs:{...Preset.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'presetradio',\n    header: 'Radio button list with present options',\n    data: PreSelectedNameChangeData,\n    onValueChange: fn()\n  }\n}",...Preset.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'errorradio',\n    header: 'Radio button list with error message',\n    error: 'You must select a value',\n    data: WhereDoYouLiveData,\n    onValueChange: fn()\n  }\n}",...Error.parameters?.docs?.source}}}},"./src/UI/Input/InputCommon.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{F0:()=>PasswordState,Fy:()=>GetInputTypeFromPasswordState,GN:()=>buildCounterText,Ob:()=>GetButtonTextFromPasswordState,it:()=>TextInputWidthClass,su:()=>TextInputWidth,vV:()=>GetAriaTextFromPasswordState});var TextInputWidth=function(TextInputWidth){return TextInputWidth[TextInputWidth.FluidFull=1]="FluidFull",TextInputWidth[TextInputWidth.FluidThreeQuarters=2]="FluidThreeQuarters",TextInputWidth[TextInputWidth.FluidTwoThirds=3]="FluidTwoThirds",TextInputWidth[TextInputWidth.FluidHalf=4]="FluidHalf",TextInputWidth[TextInputWidth.FluidThird=5]="FluidThird",TextInputWidth[TextInputWidth.FluidQuarter=6]="FluidQuarter",TextInputWidth[TextInputWidth.Char20=7]="Char20",TextInputWidth[TextInputWidth.Char10=8]="Char10",TextInputWidth[TextInputWidth.Char5=9]="Char5",TextInputWidth[TextInputWidth.Char4=10]="Char4",TextInputWidth[TextInputWidth.Char3=11]="Char3",TextInputWidth[TextInputWidth.Char2=12]="Char2",TextInputWidth}({});const TextInputWidthClass=new Map([[1,"govuk-!-width-full"],[2,"govuk-!-width-three-quarters"],[3,"govuk-!-width-two-thirds"],[4,"govuk-!-width-one-half"],[5,"govuk-!-width-one-third"],[6,"govuk-!-width-one-quarter"],[7,"govuk-input--width-20"],[8,"govuk-input--width-10"],[9,"govuk-input--width-5"],[10,"govuk-input--width-4"],[11,"govuk-input--width-3"],[12,"govuk-input--width-2"]]);var PasswordState=function(PasswordState){return PasswordState[PasswordState.Password=1]="Password",PasswordState[PasswordState.Text=2]="Text",PasswordState}({});const GetButtonTextFromPasswordState=new Map([[1,"Show"],[2,"Hide"]]),GetInputTypeFromPasswordState=new Map([[1,"password"],[2,"text"]]),GetAriaTextFromPasswordState=new Map([[1,"Your password is hidden"],[2,"Your password is visible"]]),buildCounterText=(textValue,maximumCount,countType)=>{const retVal={message:"",count:0,valid:!1};let newCount=0;newCount="character"===countType?textValue.length:(value=>{const cleanValue=value.replace(/\s\s+/g," ");if(cleanValue.length>0)return cleanValue.split(" ").filter((str=>/\S/.test(str))).length;return 0})(textValue);const remainingCount=maximumCount-newCount;return newCount<=maximumCount?(retVal.message=`You have ${remainingCount} ${countType}s remaining`,retVal.valid=!0):(retVal.message=`You have exceeeded the permitted ${countType} count by ${0-remainingCount}`,retVal.valid=!1),retVal.count=newCount,retVal}},"./src/UI/Radios/RadioButtonTestData.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{FQ:()=>WhereDoYouLiveExtData,Hm:()=>SignInData,cR:()=>PrefixedConditionalContact,nd:()=>ConditionalContact,q5:()=>WhereDoYouLiveData,wf:()=>ConditionalContactWithHint,wr:()=>PrePopulatedConditionalContact,x4:()=>SuffixedConditionalContact,xo:()=>ErrorConditionalContact,y_:()=>PreSelectedNameChangeData});var _Input_InputCommon__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/UI/Input/InputCommon.ts");const WhereDoYouLiveData=[{text:"England",value:"England"},{text:"Scotland",value:"Scotland"},{text:"Wales",value:"Wales"},{text:"Northern Ireland",value:"NIreland"}],PreSelectedNameChangeData=[{text:"Yes",value:"Yes"},{text:"No",value:"No",checked:!0}],SignInData=[{text:"Sign in with Government Gateway",value:"GovGateway",hint:"You'll have a user ID if you've registered for Self Assessment or filed a tax return online before."},{text:"Sign in with GOV.UK Verify",value:"GovVerify",hint:"You'll have an account if you've already proved your identity with either Barclays, CitizenSafe, Digidentity, Experian, Post Office, Royal Mail or SecureIdentity."}],WhereDoYouLiveExtData=[{text:"England",value:"England"},{text:"Scotland",value:"Scotland"},{text:"Wales",value:"Wales"},{text:"Northern Ireland",value:"NIreland"},{text:"or",value:"",divider:!0},{text:"I am a British citizen living abroad",value:"Abroad"}],ConditionalContact=[{text:"Email",value:"email",conditionalInput:{context:"contact-by-email",identifier:"emailAddress",label:"Email address",inputType:"email"}},{text:"Phone",value:"phone",conditionalInput:{context:"contact-by-phone",identifier:"phone",label:"Phone number",inputMode:"numeric"}},{text:"Text message",value:"text"}],ConditionalContactWithHint=[{text:"Email",value:"email",conditionalInput:{context:"contact-by-email",identifier:"emailAddress",label:"Email address",inputType:"email",hint:"This is the email you registered with"}},{text:"Phone",value:"phone",conditionalInput:{context:"contact-by-phone",identifier:"phone",label:"Phone number",inputMode:"numeric",hint:"This can be a mobile or landline"}},{text:"Do not contact me",value:"dnc"}],PrePopulatedConditionalContact=[{text:"Email",value:"email",checked:!0,conditionalInput:{context:"contact-by-email",identifier:"emailAddress",label:"Email address",inputType:"email",value:"test@test.com"}},{text:"Phone",value:"phone",conditionalInput:{context:"contact-by-phone",identifier:"phone",label:"Phone number",inputMode:"numeric"}},{text:"Do not contact me",value:"dnc"}],PrefixedConditionalContact=[{text:"Sterling (GBP)",value:"gbp",conditionalInput:{context:"payment-in-sterling",identifier:"sterling-payment",label:"Sterling (GBP) Amount",prefix:"£",width:_Input_InputCommon__WEBPACK_IMPORTED_MODULE_0__.su.FluidThird}},{text:"Euro (EUR)",value:"eur",conditionalInput:{context:"payment-in-euros",identifier:"euro-payment",label:"Euro (EUR) Amount",prefix:"€",width:_Input_InputCommon__WEBPACK_IMPORTED_MODULE_0__.su.FluidThird}},{text:"US Dollars (USD)",value:"usd",conditionalInput:{context:"payment-in-usd",identifier:"usd-payment",label:"US Dollars (USD) Amount",prefix:"$",width:_Input_InputCommon__WEBPACK_IMPORTED_MODULE_0__.su.FluidThird}}],SuffixedConditionalContact=[{text:"Miles Per Hour",value:"mph",conditionalInput:{context:"speed-in-mph",identifier:"mph-speed",label:"Miles per hour",suffix:"mph",width:_Input_InputCommon__WEBPACK_IMPORTED_MODULE_0__.su.FluidQuarter}},{text:"Kilometers Per Hour",value:"kph",conditionalInput:{context:"speed-in-kph",identifier:"kph-speed",label:"Kilometers per hour",suffix:"kph",width:_Input_InputCommon__WEBPACK_IMPORTED_MODULE_0__.su.FluidQuarter}}],ErrorConditionalContact=[{text:"Email",value:"email",checked:!0,conditionalInput:{context:"contact-by-email",identifier:"emailAddress",label:"Email address",inputType:"email",value:"",error:"You must provide a valid email address"}},{text:"Phone",value:"phone",conditionalInput:{context:"contact-by-phone",identifier:"phone",label:"Phone number",inputMode:"numeric"}},{text:"Do not contact me",value:"dnc"}]},"./src/UI/Radios/RadioButtons.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>RadioButtons});var react=__webpack_require__("./node_modules/react/index.js");function RadioButton({identifier,groupName,text,value,hint,checked=!1,required,conditionalInput,onChange}){const[conditionalTextValue,setConditionalTextValue]=(0,react.useState)(conditionalInput?.value||""),conditionalInputRef=react.useRef(null),radioButtonAttr={"aria-describedby":hint&&`${identifier}-item-hint`,"aria-required":required,"data-aria-controls":conditionalInput?`${identifier}-${conditionalInput.context}`:void 0,required},conditionalWrapperAttr={id:conditionalInput?`${identifier}-${conditionalInput?.context}`:"",className:checked?"govuk-radios__conditional":"govuk-radios__conditional govuk-radios__conditional--hidden"},conditionalStateWrapper={className:conditionalInput?.error?"govuk-form-group govuk-form-group--error":"govuk-form-group"},conditionalAttr={id:`${identifier}-${conditionalInput?.identifier}`,name:(input=`${identifier}-${conditionalInput?.identifier}`,input.replace(/[^a-zA-Z0-9]+(.)/g,((_,char)=>char?char.toUpperCase():"")).replace(/^[a-z]/,(char=>char.toUpperCase()))),type:conditionalInput?.inputType||"text",spellCheck:conditionalInput?.spellcheck||!1,autoComplete:conditionalInput?.autoComplete||void 0,className:"govuk-input",value:conditionalTextValue,inputMode:conditionalInput?.inputMode||void 0,ref:conditionalInputRef};var input;return(0,react.useEffect)((()=>{conditionalInput&&setConditionalTextValue(conditionalInput.value||"")}),[conditionalInput]),react.createElement(react.Fragment,null,react.createElement("div",{className:"govuk-radios__item"},react.createElement("input",{className:"govuk-radios__input",id:identifier,name:groupName,type:"radio",value,checked,"aria-checked":checked?"true":"false",...radioButtonAttr,onChange:e=>{const isChecked=e.target.checked;onChange(!!isChecked&&(!conditionalInput||conditionalTextValue),value),isChecked&&conditionalInputRef.current&&conditionalInputRef.current.focus()}}),react.createElement("label",{className:"govuk-label govuk-radios__label",htmlFor:identifier},text),hint&&react.createElement("div",{id:`${identifier}-item-hint`,className:"govuk-hint govuk-radios__hint"},hint)),conditionalInput&&react.createElement("div",conditionalWrapperAttr,react.createElement("div",conditionalStateWrapper,react.createElement("label",{className:"govuk-label",htmlFor:`${identifier}-${conditionalInput?.identifier}`},conditionalInput.label),conditionalInput.hint&&react.createElement("div",{id:`${identifier}-${conditionalInput.identifier}-hint`,className:"govuk-hint"},conditionalInput.hint),conditionalInput.error&&react.createElement("p",{id:`${identifier}-${conditionalInput.identifier}-error`,className:"govuk-error-message"},react.createElement("span",{className:"govuk-visually-hidden"},"Error:"),conditionalInput.error),react.createElement("input",{...conditionalAttr,onChange:e=>{const newValue=e.target.value;setConditionalTextValue(newValue),checked&&conditionalInputRef.current&&(onChange(newValue,value),conditionalInputRef.current.focus())}}))))}const Radios_RadioButton=RadioButton;try{RadioButton.displayName="RadioButton",RadioButton.__docgenInfo={description:"",displayName:"RadioButton",props:{identifier:{defaultValue:null,description:"",name:"identifier",required:!0,type:{name:"string"}},groupName:{defaultValue:null,description:"",name:"groupName",required:!0,type:{name:"string"}},text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string"}},hint:{defaultValue:null,description:"",name:"hint",required:!1,type:{name:"string"}},checked:{defaultValue:{value:"false"},description:"",name:"checked",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},conditionalInput:{defaultValue:null,description:"",name:"conditionalInput",required:!1,type:{name:"RadioButtonConditionalInputProps"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: string | boolean, radioValue: string) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/UI/Radios/RadioButton.tsx#RadioButton"]={docgenInfo:RadioButton.__docgenInfo,name:"RadioButton",path:"src/UI/Radios/RadioButton.tsx#RadioButton"})}catch(__react_docgen_typescript_loader_error){}function RadioButtonDivider({text="or"}){return react.createElement("div",{className:"govuk-radios__divider"},text)}const Radios_RadioButtonDivider=RadioButtonDivider;try{RadioButtonDivider.displayName="RadioButtonDivider",RadioButtonDivider.__docgenInfo={description:"",displayName:"RadioButtonDivider",props:{text:{defaultValue:{value:"or"},description:"",name:"text",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/UI/Radios/RadioButtonDivider.tsx#RadioButtonDivider"]={docgenInfo:RadioButtonDivider.__docgenInfo,name:"RadioButtonDivider",path:"src/UI/Radios/RadioButtonDivider.tsx#RadioButtonDivider"})}catch(__react_docgen_typescript_loader_error){}const RadioButtons=(0,react.memo)((({identifier,header,hint,data,error,compact,multiQuestion,render="vertical",required,onValueChange})=>{const[radioButtonList,setRadioButtonList]=(0,react.useState)(data.map((item=>({...item,checked:item.checked||!1,conditionalInput:item.conditionalInput?{...item.conditionalInput,value:item.conditionalInput.value||""}:void 0})))),isFirstRender=(0,react.useRef)(!0);(0,react.useMemo)((()=>{}),[]);const containerAttr={className:error?"govuk-form-group govuk-form-group--error":"govuk-form-group"},radioButtonsWrapperAttr={className:compact?"govuk-radios govuk-radios--small":"govuk-radios"};radioButtonsWrapperAttr.className+="inline"===render?" govuk-radios--inline":"";const fieldSetAttr={"aria-describedby":""};error&&(fieldSetAttr["aria-describedby"]=`${identifier}-error `),hint&&(fieldSetAttr["aria-describedby"]+=`${identifier}-hint `),fieldSetAttr["aria-describedby"]+=`${identifier}-legend`;const nonMultiLegendClass={className:compact?"govuk-fieldset__legend govuk-fieldset__legend--m":"govuk-fieldset__legend govuk-fieldset__legend--l"};(0,react.useEffect)((()=>{isFirstRender.current?isFirstRender.current=!1:onValueChange(radioButtonList)}),[radioButtonList]);const handleOnChange=(value,radioValue)=>{setRadioButtonList((prevList=>prevList.map((radio=>radio.value===radioValue?{...radio,checked:!0,conditionalInput:radio.conditionalInput?{...radio.conditionalInput,value:"string"==typeof value?value:radio.conditionalInput.value}:void 0}:{...radio,checked:!1}))))};return react.createElement("div",containerAttr,react.createElement("fieldset",{className:"govuk-fieldset",...fieldSetAttr},multiQuestion?react.createElement("legend",{className:"govuk-fieldset__legend",id:`${identifier}-legend`},header):react.createElement("legend",{...nonMultiLegendClass,id:`${identifier}-legend`},react.createElement("h1",{className:"govuk-fieldset__heading"},header)),hint&&react.createElement("div",{id:`${identifier}-hint`,className:"govuk-hint"},hint),error&&react.createElement("p",{id:`${identifier}-error`,className:"govuk-error-message"},react.createElement("span",{className:"govuk-visually-hidden"},"Error:")," ",error),react.createElement("div",{"data-module":"govuk-radios",...radioButtonsWrapperAttr},radioButtonList.map(((element,index)=>element.divider?react.createElement(Radios_RadioButtonDivider,{text:element.text,key:`divider-${index}`}):react.createElement(Radios_RadioButton,{identifier:`${identifier}-${index+1}`,groupName:identifier,text:element.text,value:element.value,hint:element.hint,key:`element-${element.value}-${index}`,checked:element.checked,required,conditionalInput:element.conditionalInput,onChange:handleOnChange}))))))}));try{RadioButtons.displayName="RadioButtons",RadioButtons.__docgenInfo={description:"",displayName:"RadioButtons",props:{identifier:{defaultValue:null,description:"",name:"identifier",required:!0,type:{name:"string"}},header:{defaultValue:null,description:"",name:"header",required:!0,type:{name:"string"}},hint:{defaultValue:null,description:"",name:"hint",required:!1,type:{name:"string"}},data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"RadioButtonDataProps[]"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},compact:{defaultValue:null,description:"",name:"compact",required:!1,type:{name:"boolean"}},multiQuestion:{defaultValue:null,description:"",name:"multiQuestion",required:!1,type:{name:"boolean"}},render:{defaultValue:null,description:"",name:"render",required:!1,type:{name:"enum",value:[{value:'"vertical"'},{value:'"inline"'}]}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},onValueChange:{defaultValue:null,description:"",name:"onValueChange",required:!0,type:{name:"(values: RadioButtonDataProps[]) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/UI/Radios/RadioButtons.tsx#RadioButtons"]={docgenInfo:RadioButtons.__docgenInfo,name:"RadioButtons",path:"src/UI/Radios/RadioButtons.tsx#RadioButtons"})}catch(__react_docgen_typescript_loader_error){}}}]);
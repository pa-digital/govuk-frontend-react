"use strict";(self.webpackChunk_pa_digital_govuk_frontend_react=self.webpackChunk_pa_digital_govuk_frontend_react||[]).push([[4754],{"./src/stories/TaskList/TaskList.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TaskList_stories});var TaskListItemStatus,react=__webpack_require__("./node_modules/react/index.js"),dist=__webpack_require__("./node_modules/react-router/dist/index.js"),react_router_dom_dist=__webpack_require__("./node_modules/react-router-dom/dist/index.js");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}!function(TaskListItemStatus){TaskListItemStatus[TaskListItemStatus.Complete=0]="Complete",TaskListItemStatus[TaskListItemStatus.Incomplete=1]="Incomplete"}(TaskListItemStatus||(TaskListItemStatus={}));var TaskList=function(param){var identifier=param.identifier,tasks=param.tasks;return react.createElement(react.Fragment,null,tasks&&tasks.length>0&&react.createElement("ul",{className:"govuk-task-list",key:identifier},tasks.map((function(task,index){var ariaDesc="".concat(identifier,"-").concat(index,"-status");task.hint&&(ariaDesc="".concat(identifier,"-").concat(index,"-hint ")+ariaDesc);var linkAttr={className:"govuk-link govuk-task-list__link","aria-describedby":ariaDesc};return react.createElement("li",{className:"govuk-task-list__item govuk-task-list__item--with-link",key:"".concat(identifier,"-").concat(index)},react.createElement("div",{className:"govuk-task-list__name-and-hint"},react.createElement(react_router_dom_dist.N_,function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})))),ownKeys.forEach((function(key){_define_property(target,key,source[key])}))}return target}({to:task.to},linkAttr),task.content),task.hint&&react.createElement("div",{id:"".concat(identifier,"-").concat(index,"-hint"),className:"govuk-task-list__hint"},task.hint)),react.createElement("div",{className:"govuk-task-list__status",id:"".concat(identifier,"-").concat(index,"-status")},0===task.statusTag?task.statusText:react.createElement("strong",{className:"govuk-tag govuk-tag--blue"},task.statusText)))}))))};try{TaskList.displayName="TaskList",TaskList.__docgenInfo={description:"",displayName:"TaskList",props:{identifier:{defaultValue:null,description:"",name:"identifier",required:!0,type:{name:"string"}},tasks:{defaultValue:null,description:"",name:"tasks",required:!0,type:{name:"TaskListTask[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/UI/TaskList/TaskList.tsx#TaskList"]={docgenInfo:TaskList.__docgenInfo,name:"TaskList",path:"src/UI/TaskList/TaskList.tsx#TaskList"})}catch(__react_docgen_typescript_loader_error){}const TaskList_stories={title:"Components/Task List/Implementation",component:TaskList};var Default={render:function(){var args={identifier:"task-list",tasks:[{content:"Company Directors",to:"/c-d",statusText:"Completed",statusTag:TaskListItemStatus.Complete},{content:"Registered company details",to:"/r-c-d",statusText:"Incomplete",statusTag:TaskListItemStatus.Incomplete},{content:"Financial History",to:"/f-h",hint:"Include 5 years of the company’s relevant financial information.",statusText:"Incomplete",statusTag:TaskListItemStatus.Incomplete}]};return react.createElement(dist.fS,null,react.createElement(TaskList,args))}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const args: TaskListProps = {\n      identifier: 'task-list',\n      tasks: [{\n        content: 'Company Directors',\n        to: '/c-d',\n        statusText: 'Completed',\n        statusTag: TaskListItemStatus.Complete\n      }, {\n        content: 'Registered company details',\n        to: '/r-c-d',\n        statusText: 'Incomplete',\n        statusTag: TaskListItemStatus.Incomplete\n      }, {\n        content: 'Financial History',\n        to: '/f-h',\n        hint: 'Include 5 years of the company’s relevant financial information.',\n        statusText: 'Incomplete',\n        statusTag: TaskListItemStatus.Incomplete\n      }]\n    };\n    return <Router>\r\n        <TaskList {...args} />\r\n      </Router>;\n  }\n}",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);
"use strict";(self.webpackChunk_pa_digital_govuk_frontend_react=self.webpackChunk_pa_digital_govuk_frontend_react||[]).push([[9916],{"./src/stories/RadioButtons/ConditionalRadios.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _UI_Radios_RadioButtons__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/UI/Radios/RadioButtons.tsx"),_UI_Radios_RadioButtonTestData__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/UI/Radios/RadioButtonTestData.ts"),_storybook_test__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Radios/Implementation (Conditional)",component:_UI_Radios_RadioButtons__WEBPACK_IMPORTED_MODULE_0__.h},Default={args:{identifier:"defaultradio",header:"Radio button list",data:_UI_Radios_RadioButtonTestData__WEBPACK_IMPORTED_MODULE_1__.nd,onValueChange:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.fn)()}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'defaultradio',\n    header: 'Radio button list',\n    data: ConditionalContact,\n    onValueChange: fn()\n  }\n}",...Default.parameters?.docs?.source}}}},"./src/UI/Radios/RadioButtonTestData.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{FQ:()=>WhereDoYouLiveExtData,Hm:()=>SignInData,nd:()=>ConditionalContact,q5:()=>WhereDoYouLiveData,y_:()=>PreSelectedNameChangeData});const WhereDoYouLiveData=[{text:"England",value:"England"},{text:"Scotland",value:"Scotland"},{text:"Wales",value:"Wales"},{text:"Northern Ireland",value:"NIreland"}],PreSelectedNameChangeData=[{text:"Yes",value:"Yes"},{text:"No",value:"No",checked:!0}],SignInData=[{text:"Sign in with Government Gateway",value:"GovGateway",hint:"You'll have a user ID if you've registered for Self Assessment or filed a tax return online before."},{text:"Sign in with GOV.UK Verify",value:"GovVerify",hint:"You'll have an account if you've already proved your identity with either Barclays, CitizenSafe, Digidentity, Experian, Post Office, Royal Mail or SecureIdentity."}],WhereDoYouLiveExtData=[{text:"England",value:"England"},{text:"Scotland",value:"Scotland"},{text:"Wales",value:"Wales"},{text:"Northern Ireland",value:"NIreland"},{text:"or",value:"",divider:!0},{text:"I am a British citizen living abroad",value:"Abroad"}],ConditionalContact=[{text:"Email",value:"email",conditionalInput:{context:"contact-by-email",identifier:"emailAddress",label:"Email address",inputType:"email"}},{text:"Phone",value:"phone",conditionalInput:{context:"contact-by-phone",identifier:"phone",label:"Phone number",inputMode:"numeric"}},{text:"Text message",value:"text"}]},"./src/UI/Radios/RadioButtons.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>RadioButtons});var react=__webpack_require__("./node_modules/react/index.js"),v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js");function RadioButton({identifier,groupName,text,value,hint,checked,required,conditionalInput,onChange}){const[conditionalTextValue,setConditionalTextValue]=(0,react.useState)(conditionalInput?.value||""),radioButtonAttr={"aria-describedby":hint&&`${identifier}-item-hint`,"aria-required":required,required},conditionalWrapperAttr={id:conditionalInput?.context,className:checked?"govuk-radios__conditional":"govuk-radios__conditional govuk-radios__conditional--hidden"},conditionalStateWrapper={className:conditionalInput?.error?"govuk-form-group govuk-form-group--error":"govuk-form-group"},conditionalAttr={id:`${identifier}-${conditionalInput?.identifier}`,name:`${identifier}${conditionalInput?.identifier}`,type:conditionalInput?.inputType||"text",spellCheck:conditionalInput?.spellcheck||!1,autoComplete:conditionalInput?.autoComplete||void 0,className:"govuk-input",value:conditionalTextValue};return react.createElement(react.Fragment,null,react.createElement("div",{className:"govuk-radios__item"},react.createElement("input",{className:"govuk-radios__input",id:identifier,name:groupName,type:"radio",value,checked,...radioButtonAttr,onChange:e=>{if(onChange){const isChecked=e.target.checked;onChange(!!isChecked&&conditionalTextValue,value)}}}),react.createElement("label",{className:"govuk-label govuk-radios__label",htmlFor:identifier},text),hint&&react.createElement("div",{id:`${identifier}-item-hint`,className:"govuk-hint govuk-radios__hint"},hint)),conditionalInput&&checked&&react.createElement("div",conditionalWrapperAttr,react.createElement("div",conditionalStateWrapper,react.createElement("label",{className:"govuk-label",htmlFor:identifier},conditionalInput.label),conditionalInput.hint&&react.createElement("div",{id:`${conditionalInput.identifier}-hint`,className:"govuk-hint"},conditionalInput.hint),conditionalInput.error&&react.createElement("p",{id:`${conditionalInput.identifier}-error`,className:"govuk-error-message"},react.createElement("span",{className:"govuk-visually-hidden"},"Error:"),conditionalInput.error),react.createElement("input",{...conditionalAttr,onChange:e=>{const newValue=e.target.value;setConditionalTextValue(newValue),checked&&onChange&&onChange(newValue,value)}}))))}const Radios_RadioButton=RadioButton;try{RadioButton.displayName="RadioButton",RadioButton.__docgenInfo={description:"",displayName:"RadioButton",props:{identifier:{defaultValue:null,description:"",name:"identifier",required:!0,type:{name:"string"}},groupName:{defaultValue:null,description:"",name:"groupName",required:!0,type:{name:"string"}},text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string"}},hint:{defaultValue:null,description:"",name:"hint",required:!1,type:{name:"string"}},checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},conditionalInput:{defaultValue:null,description:"",name:"conditionalInput",required:!1,type:{name:"RadioButtonConditionalInputProps"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((value: string | boolean, radioValue: string) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/UI/Radios/RadioButton.tsx#RadioButton"]={docgenInfo:RadioButton.__docgenInfo,name:"RadioButton",path:"src/UI/Radios/RadioButton.tsx#RadioButton"})}catch(__react_docgen_typescript_loader_error){}function RadioButtonDivider({text="or"}){return react.createElement("div",{className:"govuk-radios__divider"},text)}const Radios_RadioButtonDivider=RadioButtonDivider;try{RadioButtonDivider.displayName="RadioButtonDivider",RadioButtonDivider.__docgenInfo={description:"",displayName:"RadioButtonDivider",props:{text:{defaultValue:{value:"or"},description:"",name:"text",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/UI/Radios/RadioButtonDivider.tsx#RadioButtonDivider"]={docgenInfo:RadioButtonDivider.__docgenInfo,name:"RadioButtonDivider",path:"src/UI/Radios/RadioButtonDivider.tsx#RadioButtonDivider"})}catch(__react_docgen_typescript_loader_error){}const RadioButtons=(0,react.memo)((({identifier,header,hint,data,error,compact,multiQuestion,render="vertical",required,onValueChange})=>{const[radioButtonList,setRadioButtonList]=(0,react.useState)(data);(0,react.useMemo)((()=>{}),[]);const containerAttr={className:error?"govuk-form-group govuk-form-group--error":"govuk-form-group"},radioButtonsWrapperAttr={className:compact?"govuk-radios govuk-radios--small":"govuk-radios"};radioButtonsWrapperAttr.className+="inline"===render?" govuk-radios--inline":"";const fieldSetAttr={"aria-describedby":""};error&&(fieldSetAttr["aria-describedby"]=`${identifier}-error `),hint&&(fieldSetAttr["aria-describedby"]+=`${identifier}-hint `),fieldSetAttr["aria-describedby"]+=`${identifier}-legend`;const nonMultiLegendClass={className:compact?"govuk-fieldset__legend govuk-fieldset__legend--m":"govuk-fieldset__legend govuk-fieldset__legend--l"};(0,react.useEffect)((()=>{console.log("Sending",JSON.stringify(radioButtonList,null,2)),onValueChange(radioButtonList)}),[radioButtonList]);const handleOnChange=(value,radioValue)=>{setRadioButtonList((prevList=>prevList.map((radio=>radio.value===radioValue?{...radio,checked:"boolean"!=typeof value||value,conditionalInput:radio.conditionalInput?{...radio.conditionalInput,value:"string"==typeof value?value:""}:void 0}:{...radio,checked:!1}))))};return react.createElement("div",containerAttr,react.createElement("fieldset",{className:"govuk-fieldset",...fieldSetAttr},multiQuestion?react.createElement("legend",{className:"govuk-fieldset__legend",id:`${identifier}-legend`},header):react.createElement("legend",{...nonMultiLegendClass,id:`${identifier}-legend`},react.createElement("h1",{className:"govuk-fieldset__heading"},header)),hint&&react.createElement("div",{id:`${identifier}-hint`,className:"govuk-hint"},hint),error&&react.createElement("p",{id:`${identifier}-error`,className:"govuk-error-message"},react.createElement("span",{className:"govuk-visually-hidden"},"Error:")," ",error),react.createElement("div",{"data-module":"govuk-radios",...radioButtonsWrapperAttr},radioButtonList.map(((element,index)=>element.divider?react.createElement(Radios_RadioButtonDivider,{text:element.text,key:(0,v4.A)()}):react.createElement(Radios_RadioButton,{identifier:`${identifier}-${index+1}`,groupName:identifier,text:element.text,value:element.value,hint:element.hint,key:(0,v4.A)(),checked:element.checked,required,conditionalInput:element.conditionalInput,onChange:handleOnChange}))))))}));try{RadioButtons.displayName="RadioButtons",RadioButtons.__docgenInfo={description:"",displayName:"RadioButtons",props:{identifier:{defaultValue:null,description:"",name:"identifier",required:!0,type:{name:"string"}},header:{defaultValue:null,description:"",name:"header",required:!0,type:{name:"string"}},hint:{defaultValue:null,description:"",name:"hint",required:!1,type:{name:"string"}},data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"RadioButtonDataProps[]"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},compact:{defaultValue:null,description:"",name:"compact",required:!1,type:{name:"boolean"}},multiQuestion:{defaultValue:null,description:"",name:"multiQuestion",required:!1,type:{name:"boolean"}},render:{defaultValue:null,description:"",name:"render",required:!1,type:{name:"enum",value:[{value:'"vertical"'},{value:'"inline"'}]}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},onValueChange:{defaultValue:null,description:"",name:"onValueChange",required:!0,type:{name:"(values: RadioButtonDataProps[]) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/UI/Radios/RadioButtons.tsx#RadioButtons"]={docgenInfo:RadioButtons.__docgenInfo,name:"RadioButtons",path:"src/UI/Radios/RadioButtons.tsx#RadioButtons"})}catch(__react_docgen_typescript_loader_error){}}}]);
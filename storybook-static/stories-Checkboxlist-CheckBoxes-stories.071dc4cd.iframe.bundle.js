(self.webpackChunk_pa_digital_govuk_frontend_react=self.webpackChunk_pa_digital_govuk_frontend_react||[]).push([[9914],{"./src/stories/Checkboxlist/CheckBoxes.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Compact:()=>Compact,Default:()=>Default,Divider:()=>Divider,Error:()=>Error,ExclusiveCheckBoxes:()=>ExclusiveCheckBoxes,Hint:()=>Hint,MultiQuestion:()=>MultiQuestion,PreChecked:()=>PreChecked,ToggleCheckBoxes:()=>ToggleCheckBoxes,__namedExportsOrder:()=>__namedExportsOrder,default:()=>CheckBoxes_stories});var react=__webpack_require__("./node_modules/react/index.js"),v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})),target}function CheckBox(param){var identifier=param.identifier,groupName=param.groupName,text=param.text,value=param.value,hint=param.hint,_param_checked=param.checked,checked=void 0!==_param_checked&&_param_checked,onCheckChanged=param.onCheckChanged,checkBoxAttr={"aria-describedby":hint&&"".concat(identifier,"-item-hint")};return react.createElement("div",{className:"govuk-checkboxes__item"},react.createElement("input",_object_spread_props(function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})))),ownKeys.forEach((function(key){_define_property(target,key,source[key])}))}return target}({className:"govuk-checkboxes__input",id:identifier,name:groupName,type:"checkbox",value,defaultChecked:checked},checkBoxAttr),{onChange:onCheckChanged})),react.createElement("label",{className:"govuk-label govuk-checkboxes__label",htmlFor:identifier},text),hint&&react.createElement("div",{id:"".concat(identifier,"-item-hint"),className:"govuk-hint govuk-checkboxes__hint"},hint))}const Checkbox=CheckBox;try{CheckBox.displayName="CheckBox",CheckBox.__docgenInfo={description:"",displayName:"CheckBox",props:{identifier:{defaultValue:null,description:"",name:"identifier",required:!0,type:{name:"string"}},groupName:{defaultValue:null,description:"",name:"groupName",required:!0,type:{name:"string"}},text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string"}},hint:{defaultValue:null,description:"",name:"hint",required:!1,type:{name:"string"}},checked:{defaultValue:{value:"false"},description:"",name:"checked",required:!1,type:{name:"boolean"}},onCheckChanged:{defaultValue:null,description:"",name:"onCheckChanged",required:!0,type:{name:"ChangeEventHandler<HTMLInputElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/UI/Checkboxes/Checkbox.tsx#CheckBox"]={docgenInfo:CheckBox.__docgenInfo,name:"CheckBox",path:"src/UI/Checkboxes/Checkbox.tsx#CheckBox"})}catch(__react_docgen_typescript_loader_error){}function CheckBoxDivider(param){var _param_text=param.text,text=void 0===_param_text?"or":_param_text;return react.createElement("div",{className:"govuk-checkboxes__divider"},text)}try{CheckBoxDivider.displayName="CheckBoxDivider",CheckBoxDivider.__docgenInfo={description:"",displayName:"CheckBoxDivider",props:{text:{defaultValue:{value:"or"},description:"",name:"text",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/UI/Checkboxes/CheckboxDivider.tsx#CheckBoxDivider"]={docgenInfo:CheckBoxDivider.__docgenInfo,name:"CheckBoxDivider",path:"src/UI/Checkboxes/CheckboxDivider.tsx#CheckBoxDivider"})}catch(__react_docgen_typescript_loader_error){}var clone=function(source){return null!=source?JSON.parse(JSON.stringify(source)):source},setAllCheckBoxValues=function(data,checked){var iteratorCheckBoxes=clone(data);return iteratorCheckBoxes.forEach((function(checkBox){checkBox.checked=checked})),iteratorCheckBoxes};function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function CheckboxList_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function CheckboxList_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})))),ownKeys.forEach((function(key){CheckboxList_define_property(target,key,source[key])}))}return target}function CheckboxList_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):function CheckboxList_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})),target}function _sliced_to_array(arr,i){return function _array_with_holes(arr){if(Array.isArray(arr))return arr}(arr)||function _iterable_to_array_limit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}(arr,i)||function _unsupported_iterable_to_array(o,minLen){if(!o)return;if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}(arr,i)||function _non_iterable_rest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var CheckBoxList=(0,react.memo)((function(param){var identifier=param.identifier,header=param.header,hint=param.hint,data=param.data,error=param.error,compact=param.compact,multiQuestion=param.multiQuestion,showToggle=param.showToggle,onValueChange=param.onValueChange,_useState=_sliced_to_array((0,react.useState)(data),2),checkBoxList=_useState[0],setCheckBoxList=_useState[1],_useState1=_sliced_to_array((0,react.useState)(!1),2),renderToggle=_useState1[0],setRenderToggle=_useState1[1],_useState2=_sliced_to_array((0,react.useState)("Select all"),2),toggleText=_useState2[0],setToggleText=_useState2[1],_useState3=_sliced_to_array((0,react.useState)(!1),2),allSelected=_useState3[0],setAllSelected=_useState3[1],containerAttr={className:error?"govuk-form-group govuk-form-group--error":"govuk-form-group"},checkBoxesWrapperAttr={className:compact?"govuk-checkboxes govuk-checkboxes--small":"govuk-checkboxes"},fieldSetAttr={"aria-describedby":""};error&&(fieldSetAttr["aria-describedby"]="".concat(identifier,"-error ")),hint&&(fieldSetAttr["aria-describedby"]+="".concat(identifier,"-hint ")),fieldSetAttr["aria-describedby"]+="".concat(identifier,"-legend");var handleOnChange=function(e){var updatedList=clone(checkBoxList),valuesIndex=checkBoxList.findIndex((function(x){return x.value===e.target.value}));if(valuesIndex>-1){var selectedCheckBox=updatedList[valuesIndex];if(selectedCheckBox.exclusive&&e.target.checked&&(updatedList=setAllCheckBoxValues(updatedList,!1)),!selectedCheckBox.exclusive)updatedList.findIndex((function(x){return x.exclusive}))>0&&(updatedList=updatedList.map((function(item){return CheckboxList_object_spread_props(CheckboxList_object_spread({},item),{checked:!item.exclusive&&item.checked})})));updatedList[valuesIndex].checked=e.target.checked}showToggle&&(updatedList.every((function(item){return item.checked}))&&(setAllSelected(!0),setToggleText("De-Select all")),e.target.checked||(setAllSelected(!1),setToggleText("Select all"))),setCheckBoxList(updatedList),onValueChange(updatedList)};return(0,react.useEffect)((function(){setRenderToggle(!renderToggle)}),[checkBoxList]),react.createElement("div",containerAttr,react.createElement("fieldset",CheckboxList_object_spread({className:"govuk-fieldset"},fieldSetAttr),multiQuestion?react.createElement("legend",{className:"govuk-fieldset__legend",id:"".concat(identifier,"-legend")},header):react.createElement("legend",{className:"govuk-fieldset__legend govuk-fieldset__legend--l",id:"".concat(identifier,"-legend")},react.createElement("h1",{className:"govuk-fieldset__heading"},header)),hint&&react.createElement("div",{id:"".concat(identifier,"-hint"),className:"govuk-hint"},hint),error&&react.createElement("p",{id:"".concat(identifier,"-error"),className:"govuk-error-message"},react.createElement("span",{className:"govuk-visually-hidden"},"Error:")," ",error),react.createElement("div",CheckboxList_object_spread({"data-module":"govuk-checkboxes"},checkBoxesWrapperAttr),showToggle&&react.createElement(react.Fragment,null,react.createElement(Checkbox,{identifier:"".concat(identifier,"-toggle"),groupName:identifier,text:toggleText,value:"All selected",key:(0,v4.A)(),checked:allSelected,onCheckChanged:function(){setToggleText(allSelected?"Select all":"De-Select all"),setAllSelected(!allSelected);var iteratorCheckBoxes=clone(checkBoxList);iteratorCheckBoxes=setAllCheckBoxValues(iteratorCheckBoxes,!allSelected),setCheckBoxList(iteratorCheckBoxes),onValueChange(iteratorCheckBoxes)}}),react.createElement(CheckBoxDivider,{text:"or",key:(0,v4.A)()})),checkBoxList.map((function(element,index){return element.divider?react.createElement(CheckBoxDivider,{text:element.text,key:(0,v4.A)()}):react.createElement(Checkbox,{identifier:"".concat(identifier,"-").concat(index+1),groupName:identifier,text:element.text,value:element.value,hint:element.hint,key:(0,v4.A)(),checked:element.checked,onCheckChanged:handleOnChange})})))))}));try{CheckBoxList.displayName="CheckBoxList",CheckBoxList.__docgenInfo={description:"",displayName:"CheckBoxList",props:{identifier:{defaultValue:null,description:"",name:"identifier",required:!0,type:{name:"string"}},header:{defaultValue:null,description:"",name:"header",required:!0,type:{name:"string"}},hint:{defaultValue:null,description:"",name:"hint",required:!1,type:{name:"string"}},data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"CheckBoxDataProps[]"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},compact:{defaultValue:null,description:"",name:"compact",required:!1,type:{name:"boolean"}},multiQuestion:{defaultValue:null,description:"",name:"multiQuestion",required:!1,type:{name:"boolean"}},showToggle:{defaultValue:null,description:"",name:"showToggle",required:!1,type:{name:"boolean"}},onValueChange:{defaultValue:null,description:"",name:"onValueChange",required:!0,type:{name:"(values: CheckBoxDataProps[]) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/UI/Checkboxes/CheckboxList.tsx#CheckBoxList"]={docgenInfo:CheckBoxList.__docgenInfo,name:"CheckBoxList",path:"src/UI/Checkboxes/CheckboxList.tsx#CheckBoxList"})}catch(__react_docgen_typescript_loader_error){}var dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs");const CheckBoxes_stories={title:"Components/Checkboxes/Implementation",component:CheckBoxList};var DefaultCheckBoxData=[{text:"British",value:"British"},{text:"Irish",value:"Irish"},{text:"Citizen of another country",value:"Other"}],Default={args:{identifier:"checkboxlist",header:"Checkbox list",data:DefaultCheckBoxData,onValueChange:(0,dist.fn)()}},Compact={args:{identifier:"checkboxlist",header:"Checkbox list in compact mode",data:DefaultCheckBoxData,compact:!0}},MultiQuestion={args:{identifier:"checkboxlist",header:"Checkbox list in multi question mode",data:DefaultCheckBoxData,multiQuestion:!0}},Divider={args:{identifier:"checkboxlist",header:"Checkbox list with divider",data:[{text:"British",value:"British"},{text:"Irish",value:"Irish"},{text:"or",value:"",divider:!0},{text:"Citizen of another country",value:"Other"}]}},Hint={args:{identifier:"checkboxlist",header:"Checkbox list with hints",hint:"Checkbox list hint",data:[{text:"British",value:"British",hint:"including English, Scottish, Welsh and Northern Irish"},{text:"Irish",value:"Irish"},{text:"Citizen of another country",value:"Other"}]}},PreChecked={args:{identifier:"checkboxlist",header:"Checkbox list with pre checked options",data:[{text:"British",value:"British"},{text:"Irish",value:"Irish",checked:!0}]}},ExclusiveCheckBoxes={args:{identifier:"checkboxlist",header:"Checkbox list with exclusive options",hint:"Select all countries that apply",data:[{text:"France",value:"France"},{text:"Portugal",value:"Portugal"},{text:"Spain",value:"Spain"},{text:"or",value:"",divider:!0},{text:"No, I will not be travelling to any of these countries",value:"none",exclusive:!0}]}},ToggleCheckBoxes={args:{identifier:"checkboxlist",header:"Checkbox list with toggle options",data:DefaultCheckBoxData,showToggle:!0}},Error={args:{identifier:"checkboxlist",header:"Checkbox list with error message",error:"You must select a value",data:DefaultCheckBoxData}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'checkboxlist',\n    header: 'Checkbox list',\n    data: DefaultCheckBoxData,\n    onValueChange: fn()\n  }\n}",...Default.parameters?.docs?.source}}},Compact.parameters={...Compact.parameters,docs:{...Compact.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'checkboxlist',\n    header: 'Checkbox list in compact mode',\n    data: DefaultCheckBoxData,\n    compact: true\n  }\n}",...Compact.parameters?.docs?.source}}},MultiQuestion.parameters={...MultiQuestion.parameters,docs:{...MultiQuestion.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'checkboxlist',\n    header: 'Checkbox list in multi question mode',\n    data: DefaultCheckBoxData,\n    multiQuestion: true\n  }\n}",...MultiQuestion.parameters?.docs?.source}}},Divider.parameters={...Divider.parameters,docs:{...Divider.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'checkboxlist',\n    header: 'Checkbox list with divider',\n    data: DividerCheckBoxData\n  }\n}",...Divider.parameters?.docs?.source}}},Hint.parameters={...Hint.parameters,docs:{...Hint.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'checkboxlist',\n    header: 'Checkbox list with hints',\n    hint: 'Checkbox list hint',\n    data: HintCheckBoxData\n  }\n}",...Hint.parameters?.docs?.source}}},PreChecked.parameters={...PreChecked.parameters,docs:{...PreChecked.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'checkboxlist',\n    header: 'Checkbox list with pre checked options',\n    data: PresetCheckBoxData\n  }\n}",...PreChecked.parameters?.docs?.source}}},ExclusiveCheckBoxes.parameters={...ExclusiveCheckBoxes.parameters,docs:{...ExclusiveCheckBoxes.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'checkboxlist',\n    header: 'Checkbox list with exclusive options',\n    hint: 'Select all countries that apply',\n    data: ExclusiveCheckBoxData\n  }\n}",...ExclusiveCheckBoxes.parameters?.docs?.source}}},ToggleCheckBoxes.parameters={...ToggleCheckBoxes.parameters,docs:{...ToggleCheckBoxes.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'checkboxlist',\n    header: 'Checkbox list with toggle options',\n    data: DefaultCheckBoxData,\n    showToggle: true\n  }\n}",...ToggleCheckBoxes.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'checkboxlist',\n    header: 'Checkbox list with error message',\n    error: 'You must select a value',\n    data: DefaultCheckBoxData\n  }\n}",...Error.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Compact","MultiQuestion","Divider","Hint","PreChecked","ExclusiveCheckBoxes","ToggleCheckBoxes","Error"]},"./node_modules/@storybook/test/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/test/dist sync recursive",module.exports=webpackEmptyContext}}]);
"use strict";(self.webpackChunk_pa_digital_govuk_frontend_react=self.webpackChunk_pa_digital_govuk_frontend_react||[]).push([[385],{"./src/stories/Input/Password.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Error:()=>Error,Hint:()=>Hint,MultiQuestion:()=>MultiQuestion,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Password_stories});var dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),react=__webpack_require__("./node_modules/react/index.js"),InputCommon=__webpack_require__("./src/UI/Input/InputCommon.ts");function PasswordInput({identifier,label,hint,multiQuestion,required,labelClassExt,inputClassExt,error,value,disabled,width,inErrorState,onChange,onBlur}){const containerAttr={className:error?"govuk-form-group govuk-form-group--error govuk-password-input":"govuk-form-group govuk-password-input"},[inputState,setInputState]=(0,react.useState)(InputCommon.F0.Password),inputAttr={required,"aria-required":required,type:InputCommon.Fy.get(inputState),className:"govuk-input govuk-password-input__input govuk-js-password-input-input","aria-describedby":"","aria-invalid":!1,disabled,"aria-disabled":disabled};width&&(inputAttr.className+=` ${InputCommon.it.get(width)}`),inputClassExt&&(inputAttr.className+=` ${inputClassExt}`),error&&(inputAttr["aria-describedby"]=`${identifier}-error `),hint&&(inputAttr["aria-describedby"]+=`${identifier}-hint `),inputAttr["aria-describedby"]+=`${identifier}-label`,(error||inErrorState)&&(inputAttr.className+=" govuk-input--error",inputAttr["aria-invalid"]=!0);let assignedClass="govuk-label govuk-label--l";labelClassExt?assignedClass=multiQuestion?`govuk-label ${labelClassExt}`:`govuk-label govuk-label--l ${labelClassExt}`:multiQuestion&&(assignedClass="govuk-label");const labelAttr={className:assignedClass,id:`${identifier}-label`},handleShowPasswordClick=()=>{inputState===InputCommon.F0.Password?setInputState(InputCommon.F0.Text):setInputState(InputCommon.F0.Password)};return react.createElement("div",{...containerAttr,"data-module":"govuk-password-input"},multiQuestion?react.createElement("label",{htmlFor:identifier,...labelAttr},label):react.createElement("h1",{className:"govuk-label-wrapper"},react.createElement("label",{htmlFor:identifier,...labelAttr},label)),hint&&react.createElement("div",{id:`${identifier}-hint`,className:"govuk-hint"},hint),error&&react.createElement("p",{id:`${identifier}-error`,className:"govuk-error-message"},react.createElement("span",{className:"govuk-visually-hidden"},"Error:")," ",error),react.createElement("div",{className:"govuk-input__wrapper govuk-password-input__wrapper"},react.createElement("input",{id:identifier,name:identifier,...inputAttr,value,spellCheck:"false",autoComplete:"current-password",autoCapitalize:"none",onChange,onBlur}),react.createElement("div",{className:"govuk-password-input__sr-status govuk-visually-hidden","aria-live":"polite"},InputCommon.vV.get(inputState)),react.createElement("button",{type:"button",className:"govuk-button govuk-button--secondary govuk-password-input__toggle govuk-js-password-input-toggle","data-module":"govuk-button","aria-controls":identifier,"aria-label":`${InputCommon.Ob.get(inputState)} password`,onClick:()=>handleShowPasswordClick(),onKeyDown:()=>handleShowPasswordClick()},InputCommon.Ob.get(inputState))))}try{PasswordInput.displayName="PasswordInput",PasswordInput.__docgenInfo={description:"",displayName:"PasswordInput",props:{width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"enum",value:[{value:"1"},{value:"2"},{value:"3"},{value:"4"},{value:"5"},{value:"6"},{value:"7"},{value:"8"},{value:"9"},{value:"10"},{value:"11"},{value:"12"}]}},inErrorState:{defaultValue:null,description:"",name:"inErrorState",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: ChangeEvent<HTMLInputElement>) => void"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!0,type:{name:"(value: FocusEvent<HTMLInputElement, Element>) => void"}},spellCheck:{defaultValue:null,description:"",name:"spellCheck",required:!1,type:{name:"boolean"}},identifier:{defaultValue:null,description:"",name:"identifier",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},hint:{defaultValue:null,description:"",name:"hint",required:!1,type:{name:"string"}},multiQuestion:{defaultValue:null,description:"",name:"multiQuestion",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},labelClassExt:{defaultValue:null,description:"",name:"labelClassExt",required:!1,type:{name:"string"}},inputClassExt:{defaultValue:null,description:"",name:"inputClassExt",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/UI/Input/PasswordInput.tsx#PasswordInput"]={docgenInfo:PasswordInput.__docgenInfo,name:"PasswordInput",path:"src/UI/Input/PasswordInput.tsx#PasswordInput"})}catch(__react_docgen_typescript_loader_error){}const Password_stories={title:"Components/Input/Password Input Implementation",component:PasswordInput},Default={args:{identifier:"password-default",label:"Standard label",onChange:(0,dist.fn)(),onBlur:(0,dist.fn)()}},MultiQuestion={args:{identifier:"password-multi",label:"Multi Question label",multiQuestion:!0,onChange:(0,dist.fn)(),onBlur:(0,dist.fn)()}},Hint={args:{identifier:"password-hint",label:"Hint label",hint:"This is the password you registered for the service with.",onChange:(0,dist.fn)(),onBlur:(0,dist.fn)()}},Error={args:{identifier:"password-error",label:"Standard label",error:"You must enter a value",onChange:(0,dist.fn)(),onBlur:(0,dist.fn)()}},__namedExportsOrder=["Default","MultiQuestion","Hint","Error"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'password-default',\n    label: 'Standard label',\n    onChange: fn(),\n    onBlur: fn()\n  }\n}",...Default.parameters?.docs?.source}}},MultiQuestion.parameters={...MultiQuestion.parameters,docs:{...MultiQuestion.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'password-multi',\n    label: 'Multi Question label',\n    multiQuestion: true,\n    onChange: fn(),\n    onBlur: fn()\n  }\n}",...MultiQuestion.parameters?.docs?.source}}},Hint.parameters={...Hint.parameters,docs:{...Hint.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'password-hint',\n    label: 'Hint label',\n    hint: 'This is the password you registered for the service with.',\n    onChange: fn(),\n    onBlur: fn()\n  }\n}",...Hint.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  args: {\n    identifier: 'password-error',\n    label: 'Standard label',\n    error: 'You must enter a value',\n    onChange: fn(),\n    onBlur: fn()\n  }\n}",...Error.parameters?.docs?.source}}}},"./src/UI/Input/InputCommon.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{F0:()=>PasswordState,Fy:()=>GetInputTypeFromPasswordState,GN:()=>buildCounterText,Ob:()=>GetButtonTextFromPasswordState,it:()=>TextInputWidthClass,su:()=>TextInputWidth,vV:()=>GetAriaTextFromPasswordState});var TextInputWidth=function(TextInputWidth){return TextInputWidth[TextInputWidth.FluidFull=1]="FluidFull",TextInputWidth[TextInputWidth.FluidThreeQuarters=2]="FluidThreeQuarters",TextInputWidth[TextInputWidth.FluidTwoThirds=3]="FluidTwoThirds",TextInputWidth[TextInputWidth.FluidHalf=4]="FluidHalf",TextInputWidth[TextInputWidth.FluidThird=5]="FluidThird",TextInputWidth[TextInputWidth.FluidQuarter=6]="FluidQuarter",TextInputWidth[TextInputWidth.Char20=7]="Char20",TextInputWidth[TextInputWidth.Char10=8]="Char10",TextInputWidth[TextInputWidth.Char5=9]="Char5",TextInputWidth[TextInputWidth.Char4=10]="Char4",TextInputWidth[TextInputWidth.Char3=11]="Char3",TextInputWidth[TextInputWidth.Char2=12]="Char2",TextInputWidth}({});const TextInputWidthClass=new Map([[1,"govuk-!-width-full"],[2,"govuk-!-width-three-quarters"],[3,"govuk-!-width-two-thirds"],[4,"govuk-!-width-one-half"],[5,"govuk-!-width-one-third"],[6,"govuk-!-width-one-quarter"],[7,"govuk-input--width-20"],[8,"govuk-input--width-10"],[9,"govuk-input--width-5"],[10,"govuk-input--width-4"],[11,"govuk-input--width-3"],[12,"govuk-input--width-2"]]);var PasswordState=function(PasswordState){return PasswordState[PasswordState.Password=1]="Password",PasswordState[PasswordState.Text=2]="Text",PasswordState}({});const GetButtonTextFromPasswordState=new Map([[1,"Show"],[2,"Hide"]]),GetInputTypeFromPasswordState=new Map([[1,"password"],[2,"text"]]),GetAriaTextFromPasswordState=new Map([[1,"Your password is hidden"],[2,"Your password is visible"]]),buildCounterText=(textValue,maximumCount,countType)=>{const retVal={message:"",count:0,valid:!1};let newCount=0;newCount="character"===countType?textValue.length:(value=>{const cleanValue=value.replace(/\s\s+/g," ");if(cleanValue.length>0)return cleanValue.split(" ").filter((str=>/\S/.test(str))).length;return 0})(textValue);const remainingCount=maximumCount-newCount;return newCount<=maximumCount?(retVal.message=`You have ${remainingCount} ${countType}s remaining`,retVal.valid=!0):(retVal.message=`You have exceeeded the permitted ${countType} count by ${0-remainingCount}`,retVal.valid=!1),retVal.count=newCount,retVal}}}]);